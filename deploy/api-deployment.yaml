apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "4"
  generation: 6
  labels:
    app: node
  name: node
  namespace: api
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: node
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: node
    spec:
      containers:
      - command:
        - sh
        - -c
        - cd /srv/demo-microservice/api/ && npm install && npm start
        image: node
        imagePullPolicy: Always
        name: node
        resources:
          limits:
            cpu: "0.5"
            memory: "200Mi"
          requests:
            cpu: "0.1"
            memory: "20Mi"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /srv
          name: data
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - cd /srv && git clone https://github.com/iagoambrosio/demo-microservice
        image: node
        imagePullPolicy: Always
        name: git
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /srv
          name: data
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: data
